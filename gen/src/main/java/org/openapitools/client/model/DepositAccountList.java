/*
 * cis-verification-cpd-service
 * This document consists of unecrypted version of  Experian Verify service endpoints. This service returns standard payroll data Report which has paycheck, employer, employee PII, grosspay and other information.
 *
 * The version of the OpenAPI document: 0.0.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * deposited account details
 */
@ApiModel(description = "deposited account details")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-23T18:37:09.209394200+05:30[Asia/Calcutta]")
public class DepositAccountList {
  public static final String SERIALIZED_NAME_ROUTING_TRANSIT_I_D = "routingTransitID";
  @SerializedName(SERIALIZED_NAME_ROUTING_TRANSIT_I_D)
  private BigDecimal routingTransitID;

  public static final String SERIALIZED_NAME_ACCOUNT_NUMBER = "accountNumber";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NUMBER)
  private String accountNumber = "xxxxx-0000";

  /**
   * bank account type
   */
  @JsonAdapter(AccountTypeCodeEnum.Adapter.class)
  public enum AccountTypeCodeEnum {
    CHECKING("checking"),
    
    SAVINGS("savings"),
    
    SHARE_DEPOSIT("share deposit"),
    
    LOAN_DEPOSIT("loan deposit");

    private String value;

    AccountTypeCodeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AccountTypeCodeEnum fromValue(String value) {
      for (AccountTypeCodeEnum b : AccountTypeCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AccountTypeCodeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AccountTypeCodeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AccountTypeCodeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AccountTypeCodeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ACCOUNT_TYPE_CODE = "accountTypeCode";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TYPE_CODE)
  private AccountTypeCodeEnum accountTypeCode = AccountTypeCodeEnum.CHECKING;


  public DepositAccountList routingTransitID(BigDecimal routingTransitID) {
    
    this.routingTransitID = routingTransitID;
    return this;
  }

   /**
   * routing Transit ID
   * @return routingTransitID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "routing Transit ID")

  public BigDecimal getRoutingTransitID() {
    return routingTransitID;
  }


  public void setRoutingTransitID(BigDecimal routingTransitID) {
    this.routingTransitID = routingTransitID;
  }


  public DepositAccountList accountNumber(String accountNumber) {
    
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * bank account number
   * @return accountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "bank account number")

  public String getAccountNumber() {
    return accountNumber;
  }


  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }


  public DepositAccountList accountTypeCode(AccountTypeCodeEnum accountTypeCode) {
    
    this.accountTypeCode = accountTypeCode;
    return this;
  }

   /**
   * bank account type
   * @return accountTypeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "bank account type")

  public AccountTypeCodeEnum getAccountTypeCode() {
    return accountTypeCode;
  }


  public void setAccountTypeCode(AccountTypeCodeEnum accountTypeCode) {
    this.accountTypeCode = accountTypeCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DepositAccountList depositAccountList = (DepositAccountList) o;
    return Objects.equals(this.routingTransitID, depositAccountList.routingTransitID) &&
        Objects.equals(this.accountNumber, depositAccountList.accountNumber) &&
        Objects.equals(this.accountTypeCode, depositAccountList.accountTypeCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(routingTransitID, accountNumber, accountTypeCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DepositAccountList {\n");
    sb.append("    routingTransitID: ").append(toIndentedString(routingTransitID)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    accountTypeCode: ").append(toIndentedString(accountTypeCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

